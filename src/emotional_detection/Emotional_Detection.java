/*
 * Emotional_Detection.java
 *
 * Created on May 7, 2017, 10:31 AM
 */

package emotional_detection;

import java.awt.FileDialog;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

import javax.swing.JOptionPane;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
/**
 *
 * @author  Saanvi
 */
public class Emotional_Detection extends javax.swing.JFrame {

    List html_lines=new ArrayList();
    Utility_Class uc=new Utility_Class();
   List result=new ArrayList(); 
   
   
   int positive=0;
   int negative=0;
    /** Creates new form Emotional_Detection */
    public Emotional_Detection() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        file_path = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        img = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        destination = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        content = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        selected = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("                          Emotional Detection");

        jButton1.setText("File Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Check File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        img.setText("jLabel2");

        jLabel4.setText("Select a Line");

        destination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Node 1", "Node 3", "Node 4" }));
        destination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinationActionPerformed(evt);
            }
        });

        jButton4.setText("Check Emotion");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        content.setColumns(20);
        content.setRows(5);
        jScrollPane1.setViewportView(content);

        selected.setColumns(20);
        selected.setRows(5);
        jScrollPane2.setViewportView(selected);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(img, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(file_path, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton4)
                    .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                  try {
                      result=new ArrayList();
                      html_lines=new ArrayList();
            int total_line_pac = 0;
            FileDialog fd = new FileDialog(this, "Open", FileDialog.LOAD);
            fd.show();
            file_path.setText(fd.getDirectory() + fd.getFile());
            String path=fd.getDirectory() + fd.getFile();

            File file = new File(path);
            String line_set="";
            Scanner scanner = new Scanner(file);
              while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                //    JOptionPane.showMessageDialog(this, line);
                     if(line.trim().equals(""))
                     {
                         
                     }
                     else
                     {
                    line_set+=line+"\n";
                   
                    
                     }
               }
            content.setText(line_set);

            
             String temp[]=line_set.split("\\.");
        
        System.out.println(temp.length);
       
         destination.removeAllItems();
         destination.addItem("Select");
       
         
         
        for (int j=0;j<temp.length;j++)
         {
            String val=temp[j];
           // JOptionPane.showMessageDialog(this, val);
            if(val.trim().equals("") || val.trim().equals(null))
            {
                
            }
            else
            {
         destination.addItem("Line "+(j+1));
         html_lines.add(temp[j]);
         
          int n=0;
          List temp_result=new ArrayList();
          temp_result=uc.find_emotion((String)temp[j]);
          result.add(temp_result);        
        
         
          
         
            }
         }
      
        System.out.println(result);
         
         for(int k=0;k<result.size();k++)
         {
          
        List val=new ArrayList();
        
        val= (List)result.get(k);
      
        System.out.println(val);
        String temp1[]=((String)val.get(0)).split(" ");
        
          positive+=Integer.parseInt(temp1[0]);
         negative+=Integer.parseInt(temp1[1]);
         }
            
       
       System.out.println("Result1 "+positive +"   "+negative);
   
       
       if(positive>negative)
       {
           selected.setText("Emotion in paragraph is positive feeling");
           positive=0;
           negative=0;
       }
      
        else if(positive==0 && negative==0)
       {
           selected.setText("Emotion in paragraph is Neutral");
           positive=0;
           negative=0;
       }
      
       
       else if(positive==negative)
       {
           selected.setText("Emotion in paragraph is Mixed feeling");
           positive=0;
           negative=0;
       }
      
           
       else
       {
           selected.setText("Emotion in paragraph is Negative feeling");
           positive=0;
           negative=0;
       }
       
            /*
            //   Document htmlfile=Jsoup.parse(new File("D://a1.html"),"ISO-8859-1");
           Document html=Jsoup.parse(new File(path),"ISO-8859-1");
 
     //  Document html=Jsoup.parse(HTMLString);
         String title=html.title();
         System.out.println("Title "+title);
     
        // String h2=html.body().getElementById("h1").text();
        String body_msg=html.body().getElementsByTag("body").text();
        System.out.println(body_msg);
        
         destination.removeAllItems();
         destination.addItem("Select");
               
        String temp[]=body_msg.split("\\.");
        
        System.out.println(temp.length);
        
        for (int j=0;j<temp.length;j++)
         {
         destination.addItem("Line "+(j+1));
         html_lines.add(temp[j]);
          
         }
        System.out.println(html_lines);
         */       
        
                  }           
                  catch(Exception e)
                  {
                    e.printStackTrace();             
                  }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ImageIcon img1=new ImageIcon("D:\\Image\\a1.jpg");
        img.setIcon(img1);
        System.out.println("Testing");
        String HTMLString="<!DOCTYPE html>"
        +"<html lang=\"en\">"
        +"<head>"
        +"</head>"
        +"<body>"
        +"<h1>This is red. This is Green</h1>"
        +"</body>"
        +"</html>";
 
        Document html=Jsoup.parse(HTMLString);
        String title=html.title();
     System.out.println("Title "+title);
     
        // String h2=html.body().getElementById("h1").text();
        String body=html.body().getElementsByTag("body").text();
        System.out.println("Body "+body);
     
        try
        {
       // Document htmlfile=Jsoup.parse(new File("D://a1.html"),"ISO-8859-1");
        
        //Document doc = Jsoup.parse(new File("e:\\register.html"),"utf-8");
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        String msg=destination.getSelectedItem().toString();
        if(msg.equals("Select"))
        {
         JOptionPane.showMessageDialog(this, "Please Select a Line to identify Emotion");   
                
        }
        else
        {
            try {

                Object o = destination.getSelectedItem();
                JOptionPane.showMessageDialog(this, destination.getSelectedIndex());
                String dst = "";


                dst += o;
                int n = destination.getSelectedIndex();


                JOptionPane.showMessageDialog(this, html_lines);
                selected.setText((String) html_lines.get(n-1));
                System.out.println(html_lines.get(n - 1));
                List result = new ArrayList();
                result = uc.find_emotion((String) html_lines.get(n-1));

                String msg1 = "";
                for (int k = 0; k < result.size(); k++) {
                    msg1 = (String) result.get(k) + "\n";
                }
                selected.append("\nEmotion Found in Selected Line :- \n" + msg1);
            } catch (Exception ex) {
                Logger.getLogger(Emotional_Detection.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
            
             
           
    }//GEN-LAST:event_jButton4ActionPerformed

    private void destinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destinationActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Emotional_Detection().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea content;
    private javax.swing.JComboBox destination;
    private javax.swing.JTextField file_path;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea selected;
    // End of variables declaration//GEN-END:variables
    
}
